version: '2.3'

services:
  database:
    build:
      context: .
      dockerfile: Dockerfile-db
    networks:
      - network
    volumes:
      - database:/var/lib/mysql
    logging:
      driver: journald
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  server:
    build:
      context: .
      dockerfile: Dockerfile-server
    networks:
      - network
    volumes:
      - contracts:/usr/local/app/config/contracts
    depends_on:
      - database
      - blockchain
    user: node
    logging:
      driver: journald
    environment:
      PORT: ${NODE_PORT}
      NODE_ENV: ${NODE_ENV}
      JWT_SECRET: ${JWT_SECRET}
      DB_HOST: ${MYSQL_HOST}
      DB_NAME: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_USER}
      DB_PASS: ${MYSQL_PASSWORD}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      ETH_ADDRESS: ${ETH_ADDRESS}
      ETH_KEY: ${ETH_KEY}
      ETH_HOST: ${ETH_HOST}
      ETH_PORT: ${ETH_PORT}
      PATH: /usr/local/app/node_modules/.bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    command: bash -c "sequelize db:migrate && npm start"

  web:
    build:
      context: .
      dockerfile: Dockerfile-web
    ports:
      - 80
    depends_on:
      - server
    networks:
      - network
    environment:
      PORT: ${NODE_PORT}
      NODE_ENV: ${NODE_ENV}
      API_HOST: ${API_HOST}
      API_PORT: ${API_PORT}
    logging:
      driver: journald
    command: bash -c "npm run build && nginx -g 'daemon off;'"

  blockchain:
    build:
      context: .
      dockerfile: Dockerfile-blockchain
    volumes:
      - blockchain:/var/lib/blockchain
      - contracts:/usr/local/app/build/contracts
    networks:
      - network
    user: node
    logging:
      driver: journald
    environment:
      NODE_ENV: ${NODE_ENV}
      PATH: /usr/local/app/node_modules/.bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      ETH_ADDRESS: ${ETH_ADDRESS}
      ETH_HOST: ${ETH_HOST}
      ETH_PORT: ${ETH_PORT}
    entrypoint: bash -c "npm run compile && node ./node_modules/ganache-cli/build/cli.node.js -h 0.0.0.0 -a '1' -m 'i topi non avevano nipoti' -i '1' --db=/var/lib/blockchain"

networks:
  network:

volumes:
  database:
  blockchain:
